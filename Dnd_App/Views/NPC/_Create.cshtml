@model Dnd_App.Models.Characters.NPC

@{

}


<ul class="collapsible z-depth-3" data-collapsible="accordion">
    <!--Basic Info -->
    <li>
        <div class="collapsible-header orange-to-orangeblack white-text active">Basic info</div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                <div class="input-field col s6">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @type = "text" } })
                    <label for="name">Name</label>
                </div>
                <div class="input-field col s6">

                    @Html.EnumDropDownListFor(m => m.Size.TypeSize, new { @id = "size_size" })
                    <label for="size_size">Size</label>
                </div>
                <div class="input-field col s6">
                    @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @type = "text" } })
                    <label for="tag">Tag</label>
                </div>
                <div class="input-field col s6">
                    @Html.EnumDropDownListFor(m => m.TypeCreature, new { @class = "form-control" })
                    <label for="type">Type</label>
                </div>
                <div class="input-field col s6">
                    @Html.EnumDropDownListFor(m => m.AlignmentAttitude, new { @class = "form-control" })
                    <label for="alignmentAttitude">Alignment attitude</label>

                </div>
                <div class="input-field col s6">
                    @Html.EnumDropDownListFor(m => m.AlignmentMorality, new { @class = "form-control" })
                    <label for="alignmentMorality">Alignment morality</label>
                </div>
            </div>
        </div>
    </li>

    <!--Armor Class -->
    <li>
        <div class="collapsible-header red-to-red white-text">
            Armor class
        </div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                <div class="input-field col s6">
                    @Html.EnumDropDownListFor(m => m.ArmorClass.Name, new { @type = "text" })
                    <label for="armorClass_name">
                        Armor Class
                    </label>
                </div>
                <div class="input-field col s6">
                    @if (@Model.ArmorClass.Shield)
                    {
                        <p>
                            <input checked="checked" class="checkbox" data-val=@Model.ArmorClass.Shield
                                   id="armorClass_shield" name="armorClass_shield" type="checkbox" value=@Model.ArmorClass.Shield>
                            <label for="armorClass_shield">Shield ?</label>
                        </p>
                    }
                    else
                    {
                        <p>
                            <input class="checkbox" data-val=@Model.ArmorClass.Shield
                                   id="armorClass_shield" name="armorClass_shield" type="checkbox" value=@Model.ArmorClass.Shield>
                            <label for="armorClass_shield">Shield ?</label>
                        </p>
                    }
                </div>
            </div>
        </div>
    </li>

    <!--Hit points -->
    <li>
        <div class="collapsible-header teal darken-3 white-text">Hit Ponits</div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                <div class="input-field col s6">
                    @Html.EditorFor(m => m.HitPoint.Die, new { htmlAttributes = new { @type = "text" } })
                    <label for="hitPoint_die">Hit dice</label>

                </div>
                <div class="input-field col s6">
                    @Html.EnumDropDownListFor(m => m.HitPoint.TypeDie, new { @class = "form-control" })
                    <label for="HitPoint_TypeDie">Type die</label>

                </div>
            </div>
        </div>
    </li>

    <!--Speeds -->
    <li>
        <div class="collapsible-header teal darken-3 white-text">Speeds</div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                <div class="input-field col s12">
                    <select multiple="multiple" id="speedsMultiple">
                        @foreach (Dnd_App.Models.Enum.TypeSpeed speed in Enum.GetValues(typeof(Dnd_App.Models.Enum.TypeSpeed)))
                        {
                            if (!Model.Speeds.Contains(new Dnd_App.Models.Characters.Speed() { TypeSpeed = speed }, new Dnd_App.Models.Characters.Speed()))
                            {
                                <option value="@((int)speed)">@speed.ToString()</option>
                            }
                            else
                            {
                                <option selected value="@((int)speed)">@speed.ToString()</option>
                            }
                        }
                    </select>
                    <label>Select multiple speeds</label>
                </div>
                <div id="_npcSpeeds"></div>
            </div>
        </div>
    </li>

    <!--Ability Scores -->
    <li>
        <div class="collapsible-header teal darken-3 white-text">Ability scores</div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                @for (int i = 0; i < Model.AbilitiesScores.Count; i++)
                {
                <div class="input-field col s4">
                    @Html.HiddenFor(m => m.AbilitiesScores[i].Name)
                    @Html.HiddenFor(m => m.AbilitiesScores[i].ShortName)
                    @Html.TextBoxFor(m => m.AbilitiesScores[i].Value, new { @type = "text", @id = @Model.AbilitiesScores[i].ShortName })
                    @Html.HiddenFor(m => m.AbilitiesScores[i].ModValue)
                    <label>@Model.AbilitiesScores[i].Name</label>
                </div>
                }
            </div>
        </div>
    </li>


    <!--Saving Throws -->
    <li>
        <div class="collapsible-header teal darken-3 white-text">Saving throws</div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                @for (int i = 0; i < Model.AbilitiesScores.Count; i++)
                    {
                    <div class="input-field col s6">
                        @if (Model.AbilitiesScores[i].SavingThrow)
                            {
                            <p>
                                <input checked="checked" class="checkbox" data-val="true"
                                       id="ST@(Model.AbilitiesScores[i].ShortName)" name="ST@(Model.AbilitiesScores[i].ShortName)"
                                       type="checkbox" value="true">
                                <label for="ST@(Model.AbilitiesScores[i].ShortName)">@Model.AbilitiesScores[i].Name</label>
                            </p>
                            }
                            else
                            {
                            <p>
                                <input class="checkbox" data-val="true"
                                       id="ST@(Model.AbilitiesScores[i].ShortName)" name="ST@(Model.AbilitiesScores[i].ShortName)"
                                       type="checkbox" value="true">
                                <label for="ST@(Model.AbilitiesScores[i].ShortName)">@Model.AbilitiesScores[i].Name</label>
                            </p>

                            }
                    </div>

                    }
            </div>
        </div>
    </li>


    <!--Skills -->
    <li>
        <div class="collapsible-header teal darken-3 white-text">Skills</div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                <div class="input-field col s12">
                    <select multiple="multiple" id="skillsMultiple">
                        <option value="0">Str: Athletics </option>
                        <option value="1">Dex: Acrobatics </option>
                        <option value="2">Dex: Sleight of Hand </option>
                        <option value="3">Dex: Stealth </option>
                        <option value="4">Int: Arcana </option>
                        <option value="5">Int: History </option>
                        <option value="6">Int: Investigation </option>
                        <option value="7">Int: Nature </option>
                        <option value="8">Int: Religion </option>
                        <option value="9">Wis: Animal Handling </option>
                        <option value="10">Wis: Insight </option>
                        <option value="11">Wis: Medicine </option>
                        <option value="12">Wis: Perception </option>
                        <option value="13">Wis: Survival </option>
                        <option value="14">Cha: Deception </option>
                        <option value="15">Cha: Intimidation </option>
                        <option value="16">Cha: Performance </option>
                        <option value="17">Cha: Persuasion </option>
                    </select>
                    <label>Select multiple skills</label>
                </div>
                <div id="_npcSkills"></div>
            </div>
        </div>
    </li>


   

    <!--Conditions  (Vulnerabilities, resistances, immunities) -->
    <li>
        <div class="collapsible-header teal darken-3 white-text">Conditions</div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                <div class="input-field col s6">
                    <select multiple="multiple" id="vulnerabilitiesMultiple">
                        @foreach (Dnd_App.Models.Enum.TypeDamage vul in Enum.GetValues(typeof(Dnd_App.Models.Enum.TypeDamage)))
                        {
                            <option value="@((int)vul)">@vul.ToString() </option>
                        }
                    </select>
                    <label>Select multiple damage vulnerabilities</label>
                </div>
                <div class="input-field col s6">
                    <select multiple="multiple" id="resistancesMultiple">
                        @foreach (Dnd_App.Models.Enum.TypeDamage res in Enum.GetValues(typeof(Dnd_App.Models.Enum.TypeDamage)))
                        {
                            <option value="@((int)res)">@res.ToString() </option>
                        }
                    </select>
                    <label>Select multiple damage resistances</label>
                </div>
                <div class="input-field col s6">
                    <select multiple="multiple" id="immunitiesDmgMultiple">
                        @foreach (Dnd_App.Models.Enum.TypeDamage imm in Enum.GetValues(typeof(Dnd_App.Models.Enum.TypeDamage)))
                        {
                            <option value="@((int)imm)">@imm.ToString() </option>
                        }
                    </select>
                    <label>Select multiple damage immunities</label>
                </div>
                <div class="input-field col s6">
                    <select multiple="multiple" id="immunitiesCndMultiple">
                        @foreach (Dnd_App.Models.Enum.TypeCondition imm in Enum.GetValues(typeof(Dnd_App.Models.Enum.TypeCondition)))
                        {
                            <option value="@((int)imm)">@imm.ToString() </option>
                        }
                    </select>
                    <label>Select multiple condition immunities</label>
                </div>
            </div>
        </div>
    </li>


    <!--Senses -->
    <li>
        <div class="collapsible-header teal darken-3 white-text">Senses</div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                <div class="input-field col s12">
                    <select multiple="multiple" id="sensesMultiple">
                        @foreach (Dnd_App.Models.Enum.TypeSense sense in Enum.GetValues(typeof(Dnd_App.Models.Enum.TypeSense)))
                        {
                            <option value="@((int)sense)">@sense.ToString() </option>
                        }
                    </select>
                    <label>Select multiple senses</label>
                </div>
                <div id="_npcSenses"></div>
            </div>
        </div>
    </li>



    <!--Languages -->
    <li>
        <div class="collapsible-header teal darken-3 white-text">Languages</div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                <div class="input-field col s6">
                    <select multiple="multiple" id="languagesSpeakMultiple">
                        <option value="0">Common</option>
                        <option value="1">Dwarvish </option>
                        <option value="2">Elvish </option>
                        <option value="3">Giant </option>
                        <option value="4">Gnomish </option>
                        <option value="5">Goblin </option>
                        <option value="6">Halfing </option>
                        <option value="7">Orc </option>
                        <option value="8">Abyssal </option>
                        <option value="9">Celestial </option>
                        <option value="10">Draconic </option>
                        <option value="11">Deep Speech </option>
                        <option value="12">Infernal </option>
                        <option value="13">Primordial </option>
                        <option value="14">Sylvan </option>
                        <option value="15">Undercommon </option>
                    </select>
                    <label>Select multiple language speak</label>
                </div>
                <div class="input-field col s6">
                    <select multiple="multiple" id="languagesUnderstandMultiple">
                        <option value="0">Common </option>
                        <option value="1">Dwarvish </option>
                        <option value="2">Elvish </option>
                        <option value="3">Giant </option>
                        <option value="4">Gnomish </option>
                        <option value="5">Goblin </option>
                        <option value="6">Halfing </option>
                        <option value="7">Orc </option>
                        <option value="8">Abyssal </option>
                        <option value="9">Celestial </option>
                        <option value="10">Draconic </option>
                        <option value="11">Deep Speech </option>
                        <option value="12">Infernal </option>
                        <option value="13">Primordial </option>
                        <option value="14">Sylvan </option>
                        <option value="15">Undercommon </option>
                    </select>
                    <label>Select multiple language understand</label>
                </div>

                <div class="input-field col s6">
                    @Html.EditorFor(model => Model.Telepathy, new { htmlAttributes = new { @type = "text", @id = "telepathy" } })
                    <label for="telepathy">Telepathy</label>
                </div>
            </div>
        </div>
    </li>



    <!--Challenge -->
    <li>
        <div class="collapsible-header teal darken-3 white-text">Challenge Rating</div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                <div class="input-field col s12  ">
                    <select id="chrating">
                        @foreach (var challenge in Model.Challenge.ChallengeList())
                        {
                            <option value="@(challenge.XP)"> Challenge  @challenge.Value - Experience @challenge.XP XP - Proficiency +@challenge.ProficiencyBonus </option>

                        }
                    </select>
                    <label for="chrating">Challenge</label>
                </div>
            </div>
        </div>
    </li>


    <!--Special Traits -->
    <li>
        <div class="collapsible-header teal darken-3 white-text">Special Traits</div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                <div id="_npcSpecialTraits"></div>
                <center>
                    <a onclick="addSpecialTraits();" class="btn-floating btn-large waves-effect waves-light red"><i class="material-icons">add</i></a>
                </center>
            </div>
        </div>
    </li>

@*
    <!--Actions -->
    <li>
        <div class="collapsible-header teal darken-3 white-text">Actions</div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                <div id="_npcActions"></div>
                <center>
                    <a onclick="addAction(1);" class="btn-floating btn-large waves-effect waves-light red"><i class="material-icons">add</i></a>
                </center>
            </div>
        </div>
    </li>

    <!--Reactions -->

    <li>
        <div class="collapsible-header teal darken-3 white-text">Reactions</div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                <div id="_npcReactions"></div>
                <center>
                    <a onclick="addAction(2);" class="btn-floating btn-large waves-effect waves-light red"><i class="material-icons">add</i></a>
                </center>
            </div>
        </div>
    </li>
    <!--Legendary Action -->

    <li>
        <div class="collapsible-header teal darken-3 white-text">Legendary Actions</div>
        <div class="collapsible-body grey lighten-5">
            <div class="row">
                <div id="_npcLActions"></div>
                <center>
                    <a onclick="addAction(3);" class="btn-floating btn-large waves-effect waves-light red"><i class="material-icons">add</i></a>
                </center>
            </div>
        </div>
    </li>
*@
</ul>














<script src="~/Scripts/materialize/initform.js"></script>
<script src="~/Scripts/materialize/loadform.js"></script>



<!--Basic Info  ------------------------------------------------------------------------------------->
<!--updateName-->
<script>
           $(document).ready(
                function updateName() {
                    $("#Name").focusout(function (event) {

                        var name = $("#Name").val();

                        if (name == "") {
                            Materialize.toast('<i class="fa fa-exclamation-triangle"></i> Alert: Name can not be empty!', 3000);
                            name = "Name";
                            $("#Name").val("Name");
                        }

                        $.ajax({
                           type: "POST",
                           cache: false,
                            url: "@Url.Action("_updateName", "NPC")",
                            dataType: "html",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({ 'newName': name, 'tempID': @Model.TempID }),
                            success: function (data)
                            {
                                UpdateToast(data);
                                reloadNpcView();
                            },
                            failure: function (errMsg) {

                                alert(errMsg);
                            }
                        });

                    });
                }
            );
</script>

<!--updateTag-->
<script>
           $(document).ready(
                function updateTag() {
                    $("#Tag").focusout(function (event) {

                        var val = $("#Tag").val();

                       $.ajax({
                           type: "POST",
                           cache: false,
                            url: "@Url.Action("_updateTag", "NPC")",
                            dataType: "html",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({ 'val': val, 'tempID': @Model.TempID }),
                            success: function (data)
                            {
                                UpdateToast(data);
                                reloadNpcView();
                            },
                            failure: function (errMsg) {
                                console.log("error size")
                                alert(errMsg);
                            }
                        });


                    });
                }
            );


</script>

<!--updateAlignmentMorality-->
<script>
           $(document).ready(
               function updateAlignmentMorality() {
                   $("#AlignmentMorality").change(function (event) {
                       var val = $('#AlignmentMorality').val();
                       console.log(val);

                       $.ajax({
                           type: "POST",
                           cache: false,
                           url: "@Url.Action("_updateAlignmentMorality")",
                            dataType: "html",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({ 'val': val, 'tempID': @Model.TempID }),
                            success: function (data)
                            {
                                UpdateToast(data);
                                reloadNpcView();
                            },
                            failure: function (errMsg) {
                                console.log("error size")
                                alert(errMsg);
                            }
                        });


                   });

               }
           );
</script>

<!--updateAlignmentAttitude-->
<script>
           $(document).ready(
               function updateAlignmentMorality() {
                   $("#AlignmentAttitude").change(function (event) {
                       var val = $('#AlignmentAttitude').val();
                       console.log(val);

                       $.ajax({
                           type: "POST",
                           cache: false,
                            url: "@Url.Action("_updateAlignmentAttitude")",
                            dataType: "html",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({ 'val': val, 'tempID': @Model.TempID }),
                            success: function (data)
                            {
                                UpdateToast(data);
                                reloadNpcView();
                            },
                            failure: function (errMsg) {
                                console.log("error size")
                                alert(errMsg);
                            }
                        });


                   });

               }
           );
</script>

<!--updateSize-->
<script>
           $(document).ready(
               function updateSize() {
                   $("#size_size").change(function (event) {
                       var val = $('#size_size').val();
                       console.log(val);


                       $.ajax({
                           type: "POST",
                           cache: false,
                            url: "@Url.Action("_updateSize")",
                            dataType: "html",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({ 'type': val, 'tempID': @Model.TempID }),
                            success: function (data)
                            {
                                UpdateToast(data);
                                reloadNpcView();
                            },
                            failure: function (errMsg) {
                                console.log("error size")
                                alert(errMsg);
                            }
                        });
                   });
               }
           );
</script>

<!--updateType-->
<script>
               $(document).ready(
                   function updateType() {
                       $("#TypeCreature").change(function (event) {
                           var val = $('#TypeCreature').val();
                           console.log(val);


                           $.ajax({
                               type: "POST",
                               cache: false,
                                url: "@Url.Action("_updateType")",
                                dataType: "html",
                                contentType: "application/json; charset=utf-8",
                                data: JSON.stringify({ 'type': val, 'tempID': @Model.TempID }),
                                success: function (data)
                                {
                                    UpdateToast(data);
                                    reloadNpcView();
                                },
                                failure: function (errMsg) {
                                    console.log("error size")
                                    alert(errMsg);
                                }
                            });
                       });
                   }
               );
</script>


<!--Armor class  ------------------------------------------------------------------------------------->
<!--recalculateAC-->
<script>
               $(document).ready(
                   function recalculateAC() {
                       $("#armorClass_shield").change(function (event) {
                           var isShield = $('#armorClass_shield').is(":checked");
                           var nameAC = $('#ArmorClass_Name').val();

                           callAC(isShield, nameAC);
                       });
                       $("#ArmorClass_Name").change(function (event) {
                           var isShield = $('#armorClass_shield').is(":checked");
                           var nameAC = $('#ArmorClass_Name').val();

                           callAC(isShield, nameAC);
                       });
                   }
               );
</script>

<!--callAC-->
<script>
           function callAC(isShield, nameAC) {


               $.ajax({
                type: "POST",
                cache: false,
                url: "@Url.Action("_RecalculateAC")",
                dataType: "html",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ '_isShield': isShield, '_nameAC': nameAC, 'tempID': @Model.TempID }),
                success: function (data)
                {
                    console.log(data);
                    UpdateToast(data);
                    reloadNpcView();
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
           }

</script>


<!--Hitpoints     ------------------------------------------------------------------------------------->

<script>
           $(document).ready(
               function changeHP() {
                   $("#HitPoint_Die").change(function (event) {
                       var hd = $('#HitPoint_Die').val();
                       var d = $('#HitPoint_TypeDie').val();

                       if (isNaN(hd)) {
                           Alertoast('Hit Point value must be a number', 'Hit Point value was changed to 1');
                           hd = "1";
                           $("#HitPoint_Die").val("1");
                       }

                       if (hd == "") {
                           Alertoast('Hit Point value can not be empty', 'Hit Point value was changed to 1');
                           hd = "1";
                           $("#HitPoint_Die").val("1");
                       }

                       recalculateHP(hd, d);

                   });
                   $("#HitPoint_TypeDie").change(function (event) {
                       var hd = $('#HitPoint_Die').val();
                       var d = $('#HitPoint_TypeDie').val();


                       recalculateHP(hd, d);

                   });

               }
           );
</script>

<!--recalculateHP-->
<script>
           function recalculateHP(hd, d) {

               $.ajax({
                type: "POST",
                cache: false,
                url: "@Url.Action("_RecalculateHP")",
                dataType: "html",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ 'hd': hd, 'd': d, 'TempId': @Model.TempID }),
                success: function (data)
                {
                    console.log(data);
                    UpdateToast(data);
                    reloadNpcView();
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
           }

</script>


<!--Speeds      --------------------------------------------------------------------------------------->
<!--loadSpeeds on load-->
<script>
           $(document).ready(
               function loadSpeeds() {
                   var selectedValues = $('#speedsMultiple').val();
                   console.log("[init] select speeds: " + selectedValues);
                   addSpeed(selectedValues);
               }
           );
</script>

<!--selectedSpeed-->
<script>
           $(document).ready(
               function selectedSpeed() {
                   $("#speedsMultiple").change(function (event) {

                       var selectedValues = $('#speedsMultiple').val();
                       console.log("select speeds: " + selectedValues);
                       addSpeed(selectedValues);

                   });
               }
           );
</script>

<!--addSpeed-->
<script>
        function addSpeed(listSpeed) {
            $.ajax({
                type: "POST",
                cache: false,
                url: "@Url.Action("_AddSpeed")",
                dataType: "html",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ 'list': listSpeed, 'TempID': @Model.TempID }),
                success: function (data)
                {
                    var _npcSpeeds = $("#_npcSpeeds");
                    _npcSpeeds.html(data);
                    reloadNpcView();
                },
                failure: function (errMsg) {
                    console.log("error ?")
                    alert(errMsg);
                }
            });
        }
</script>

<!--updateSpeed-->
<script>
        function updateSpeed(_type, _value) {

            $.ajax({
                type: "POST",
                cache: false,
                url: "@Url.Action("_UpdateSpeed")",
                dataType: "html",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ '_type': _type, '_value': _value, 'TempID': @Model.TempID }),
                success: function (data)
                {
                    UpdateToast(data);
                    reloadNpcView();
                },
                failure: function (errMsg) {
                    console.log("error size")
                    alert(errMsg);
                }
            });
        }
</script>






<!--Ability scores      ------------------------------------------------------------------------------->
<!--changeAS-->
<script>
        $(document).ready(
            function changeAS() {
                $("#Str").change(function (event) {
                    var str = $('#Str').val();
                    recalculateAS("Str", str);
                });
                $("#Dex").change(function (event) {
                    var str = $('#Dex').val();
                    recalculateAS("Dex", str);
                });
                $("#Con").change(function (event) {
                    var str = $('#Con').val();
                    recalculateAS("Con", str);
                });
                $("#Int").change(function (event) {
                    var str = $('#Int').val();
                    recalculateAS("Int", str);
                });
                $("#Wis").change(function (event) {
                    var str = $('#Wis').val();
                    recalculateAS("Wis", str);
                });
                $("#Cha").change(function (event) {
                    var str = $('#Cha').val();
                    recalculateAS("Cha", str);
                });
            }
        );
</script>

<!--recalculateAS-->
<script>
           function recalculateAS(mod, value) {

               if (isNaN(value)) {
                   Alertoast('Ability Score: ' + mod + ' value must be a number');
                   value = "10";
                   $("#" + mod).val("10");
               }

               if (value == "") {
                   Alertoast('Ability Score: ' + mod + ' value can not be empty');
                   value = "10";
                   $("#" + mod).val("10");
               }

               if (value < 1) {
                   Alertoast('Ability Score: ' + mod + ' value can not be < 1');
                   value = "1";
                   $("#" + mod).val("1");
               }

               if (value > 30) {
                   Alertoast('Ability Score: ' + mod + ' value can not be > 30');
                   value = "30";
                   $("#" + mod).val("30");
               }

               $.ajax({
                    type: "POST",
                    cache: false,
                    url: "@Url.Action("RecalculateAS")",
                    dataType: "html",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ '_mod': mod, '_value': value, 'TempID': @Model.TempID}),
                    success: function (data)
                    {
                        UpdateToast(data);
                        reloadNpcView();
                    },
                    failure: function (errMsg) {
                        console.log("error ?")
                        alert(errMsg);
                    }
                });
           }
</script>




<!--Saving Throw      ------------------------------------------------------------------------------->
<!--SavingThrowUpdate-->
<script>
           $(document).ready(
               function SavingThrowUpdate() {
                   $("#STStr").change(function (event) {
                       var STWis = $('#STStr').is(":checked");
                       UpdateSavingThrow(STWis, "Str");
                   });
                   $("#STDex").change(function (event) {
                       var STWis = $('#STDex').is(":checked");
                       UpdateSavingThrow(STWis, "Dex")
                   });
                   $("#STCon").change(function (event) {
                       var STWis = $('#STCon').is(":checked");
                       UpdateSavingThrow(STWis, "Con")
                   });
                   $("#STInt").change(function (event) {
                       var STWis = $('#STInt').is(":checked");
                       UpdateSavingThrow(STWis, "Int")
                   });
                   $("#STWis").change(function (event) {
                       var STWis = $('#STWis').is(":checked");
                       UpdateSavingThrow(STWis, "Wis")
                   });
                   $("#STCha").change(function (event) {
                       var STWis = $('#STCha').is(":checked");
                       UpdateSavingThrow(STWis, "Cha")
                   });
               }
           );
</script>


<!--UpdateSavingThrow-->
<script>
           function UpdateSavingThrow(check, mod) {


                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "@Url.Action("_UpdateSavingThrow")",
                    dataType: "html",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ '_mod': mod, '_check': check, 'TempID': @Model.TempID}),
                    success: function (data)
                    {
                        UpdateToast(data);
                        reloadNpcView();
                    },
                    failure: function (errMsg) {
                        console.log("error ?")
                        alert(errMsg);
                    }
                });
           }
</script>



<!--Skills      -------------------------------------------------------------------------------------->
<!--updateSkill dd-->
<script>
        function updateSkill(name, value) {

            $.ajax({
                type: "POST",
                cache: false,
                url: "@Url.Action("_updateSkill")",
                dataType: "html",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ 'name': name, 'value': value, 'TempID': @Model.TempID }),
                success: function (data)
                {
                    UpdateToast(data);
                    reloadNpcView();
                },
                failure: function (errMsg) {
                    console.log("error size")
                    alert(errMsg);
                }
            });
        }
</script>

<!--loadSkills on load-->
<script>
        $(document).ready(
            function loadSkills() {


                        var list =  @Html.Raw(@Json.Encode(Model.Skills));

                console.log(list);

                var xlist = [];

                for (var i = 0; i < list.length; i++) {
                    xlist.push(list[i].SkillName);
                    $("select#skillsMultiple > option[value=" + list[i].SkillName + "]").prop("selected", true);
                }

                //$("select#skillsMultiple > optgroup > option[value=" +  + "]").prop("selected", true);

                console.log(xlist);
                $('#skillsMultiple').material_select('destroy');
                $('#skillsMultiple').material_select();

                $.ajax({
                    type: "POST",
                    cache: false,
                    url: "@Url.Action("_addSkills")",
                    dataType: "html",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ 'list': xlist, 'TempID': @Model.TempID }),
                    success: function (data)
                    {
                        var _npcSkills = $("#_npcSkills");
                        _npcSkills.html(data);
                        reloadNpcView();
                    },
                    failure: function (errMsg) {
                        console.log("error ?")
                        alert(errMsg);
                    }
                });
        }
    );
</script>

<!--selectedSkills-->
<script>
            $(document).ready(
                function selectedSpeed() {
                    $("#skillsMultiple").change(function (event) {

                        var selectedValues = $('#skillsMultiple').val();
                        console.log("select skills: " + selectedValues);

                        $.ajax({
                            type: "POST",
                            cache: false,
                            url: "@Url.Action("_addSkills")",
                                dataType: "html",
                                contentType: "application/json; charset=utf-8",
                                data: JSON.stringify({ 'list': selectedValues, 'TempID': @Model.TempID }),
                                success: function (data)
                                {
                                    var _npcSkills = $("#_npcSkills");
                                    _npcSkills.html(data);
                                    reloadNpcView();
                                },
                                failure: function (errMsg) {
                                    console.log("error ?")
                                    alert(errMsg);
                                }
                            });

                    });
                }
            );
</script>









<!--Vul Res Cond      -------------------------------------------------------------------------------------->
<!--selectedvulnerabilities-->
<script>
            $(document).ready(
                function selectedVulnerabilities() {
                    $("#vulnerabilitiesMultiple").change(function (event) {

                        var selectedValues = $('#vulnerabilitiesMultiple').val();

                        $.ajax({
                            type: "POST",
                            cache: false,
                            url: "@Url.Action("_addVulnerabilities")",
                            dataType: "html",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({ 'list': selectedValues, 'TempID': @Model.TempID}),
                            success: function (data)
                            {
                                console.log("success ?");
                                reloadNpcView();
                            },
                            failure: function (errMsg) {
                                console.log("error ?")
                                alert(errMsg);
                            }
                        });
                    });
                }
            );
</script>

<!--selectedresistancess-->
<script>
            $(document).ready(
                function selectedVulnerabilities() {
                    $("#resistancesMultiple").change(function (event) {

                        var selectedValues = $('#resistancesMultiple').val();

                        $.ajax({
                            type: "POST",
                            cache: false,
                            url: "@Url.Action("_addResistances")",
                                dataType: "html",
                                contentType: "application/json; charset=utf-8",
                                data: JSON.stringify({ 'list': selectedValues, 'TempID': @Model.TempID }),
                                success: function (data)
                                {
                                    console.log("success ?");
                                    reloadNpcView();
                                },
                                failure: function (errMsg) {
                                    console.log("error ?")
                                    alert(errMsg);
                                }
                            });

                        });
                    }
                );
</script>

<!--selectedimmunitiesDmgMultiple-->
<script>
                $(document).ready(
                    function selectedVulnerabilities() {
                        $("#immunitiesDmgMultiple").change(function (event) {

                            var selectedValues = $('#immunitiesDmgMultiple').val();

                            $.ajax({
                                type: "POST",
                                cache: false,
                                url: "@Url.Action("_addImmunitiesDMG")",
                                dataType: "html",
                                contentType: "application/json; charset=utf-8",
                                data: JSON.stringify({ 'list': selectedValues, 'TempID': @Model.TempID }),
                                success: function (data)
                                {
                                    console.log("success ?");
                                    reloadNpcView();
                                },
                                failure: function (errMsg) {
                                    console.log("error ?")
                                    alert(errMsg);
                                }
                            });

                            });
                        }
                    );
</script>

<!--selectedimmunitiesCndMultiple-->
<script>
                    $(document).ready(
                        function selectedVulnerabilities() {
                            $("#immunitiesCndMultiple").change(function (event) {

                                var selectedValues = $('#immunitiesCndMultiple').val();

                                $.ajax({
                                    type: "POST",
                                    cache: false,
                                    url: "@Url.Action("_addImmunitiesCND")",
                                        dataType: "html",
                                        contentType: "application/json; charset=utf-8",
                                        data: JSON.stringify({ 'list': selectedValues, 'TempID': @Model.TempID }),
                                        success: function (data)
                                        {
                                            console.log("success ?");
                                            reloadNpcView();
                                        },
                                        failure: function (errMsg) {
                                            console.log("error ?")
                                            alert(errMsg);
                                        }
                                    });
                                });
                            }
                        );
</script>

<!--selectedvulnerabilities-->
<script>
                    $(document).ready(
                        function selectedVulnerabilities() {
                            $("#vulnerabilitiesMultiple").change(function (event) {

                                var selectedValues = $('#vulnerabilitiesMultiple').val();

                                $.ajax({
                                    type: "POST",
                                    cache: false,
                                    url: "@Url.Action("_addVulnerabilities")",
                            dataType: "html",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({ 'list': selectedValues, 'TempID': @Model.TempID }),
                            success: function (data)
                            {
                                console.log("success ?");
                                reloadNpcView();
                            },
                            failure: function (errMsg) {
                                console.log("error ?")
                                alert(errMsg);
                            }
                        });
                    });
                }
            );
</script>

<!--Senses      -------------------------------------------------------------------------------------->

<!--loadSenses on load-->
<script>
        $(document).ready(
            function loadSenses() {


                var list =  @Html.Raw(@Json.Encode(Model.Senses));

                console.log(list);

                var xlist = [];

                for (var i = 0; i < list.length; i++) {
                    xlist.push(list[i].TypeSense);
                    $("select#sensesMultiple > option[value=" + list[i].TypeSense + "]").prop("selected", true);
                }

                $('#sensesMultiple').material_select('destroy');
                $('#sensesMultiple').material_select();

                $.ajax({
                            type: "POST",
                            cache: false,
                        url: "@Url.Action("_addSenses")",
                        dataType: "html",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({ 'list': xlist, 'TempID': @Model.TempID }),
                        success: function (data)
                        {
                            var _npcSenses = $("#_npcSenses");
                            _npcSenses.html(data);
                            reloadNpcView();
                        },
                        failure: function (errMsg) {
                            console.log("error ?")
                            alert(errMsg);
                        }
                    });
        }
    );
</script>

<!--selectedSenses-->
<script>
            $(document).ready(
                function selectedSenses() {
                    $("#sensesMultiple").change(function (event) {

                        var selectedValues = $('#sensesMultiple').val();
                        console.log("select senses: " + selectedValues);

                        $.ajax({
                            type: "POST",
                            cache: false,
                            url: "@Url.Action("_addSenses")",
                        dataType: "html",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({ 'list': selectedValues, 'TempID': @Model.TempID }),
                        success: function (data)
                        {
                            var _npcSenses = $("#_npcSenses");
                            _npcSenses.html(data);
                            reloadNpcView();
                        },
                        failure: function (errMsg) {
                            console.log("error ?")
                            alert(errMsg);
                        }
                    });

                    });
                }
            );
</script>

<!--updateSense-->
<script>

        function updateSense(_type, _value) {

            $.ajax({
                type: "POST",
                cache: false,
                url: "@Url.Action("_UpdateSenses")",
                dataType: "html",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ '_type': _type, '_value': _value, 'TempID': @Model.TempID}),
                success: function (data)
                {
                    console.log(data);
                    reloadNpcView();
                    UpdateToast(data);

                },
                failure: function (errMsg) {
                    console.log("error sense")
                    alert(errMsg);
                }
            });
        }
</script>




<!--Languages      -------------------------------------------------------------------------------------->

<!--language on load-->
<script>
        $(document).ready(
            function loadlanguage() {


                var lanSpeak =  @Html.Raw(@Json.Encode(Model.LanguagesSpeak));
                var lanUnder =  @Html.Raw(@Json.Encode(Model.LanguagesUndersatand));

                console.log(lanSpeak);
                console.log($("select#languagesSpeakMultiple"));


                for (var i = 0; i < lanSpeak.length; i++) {
                    console.log($("select#languagesSpeakMultiple > option[value=" + lanSpeak[i] + "]"));
                    $("select#languagesSpeakMultiple > option[value=" + lanSpeak[i] + "]").prop("selected", true);
                }
                $('#languagesSpeakMultiple').material_select('destroy');
                $('#languagesSpeakMultiple').material_select();

                for (var i = 0; i < lanUnder.length; i++) {
                    console.log(lanUnder[i]);

                    $("select#languagesUnderstandMultiple > option[value=" + lanUnder[i] + "]").prop("selected", true);
                }
                $('#languagesUnderstandMultiple').material_select('destroy');
                $('#languagesUnderstandMultiple').material_select();

        }
    );
</script>

<!--selectedLanSpeak-->
<script>
            $(document).ready(
                function selectedLanSpeak() {
                    $("#languagesSpeakMultiple").change(function (event) {

                        var selectedValues = $('#languagesSpeakMultiple').val();

                        $.ajax({
                            type: "POST",
                            cache: false,
                            url: "@Url.Action("_addLanguagesSpeak")",
                            dataType: "html",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({ 'list': selectedValues, 'TempID': @Model.TempID }),
                            success: function (data)
                            {
                                console.log("success ?");
                                reloadNpcView();
                            },
                            failure: function (errMsg) {
                                console.log("error ?")
                                alert(errMsg);
                            }
                        });
                    });
                }
            );
</script>

<!--selectedLanUnderstand-->
<script>
            $(document).ready(
                function selectedLanUnderstand() {
                    $("#languagesUnderstandMultiple").change(function (event) {

                        var selectedValues = $('#languagesUnderstandMultiple').val();

                        $.ajax({
                            type: "POST",
                            cache: false,
                            url: "@Url.Action("_addLanguagesUnderstand")",
                            dataType: "html",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({ 'list': selectedValues, 'TempID': @Model.TempID }),
                            success: function (data)
                            {
                                console.log("success ?");
                                reloadNpcView();
                            },
                            failure: function (errMsg) {
                                console.log("error ?")
                                alert(errMsg);
                            }
                        });
                    });
                }
            );
</script>

<!--updateTelepathy-->
<script>
               $(document).ready(
                   function updateTelepathy() {
                       $("#telepathy").focusout(function (event) {
                           var val = $('#telepathy').val();

                           if (isNaN(val)) {
                               Alertoast('Telepathy value must be a number');
                               value = "0";
                               $('#telepathy').val("0");
                           }

                           if (val == "") {
                               Alertoast('Telepathy value can not be empty');
                               val = "0";
                               $('#telepathy').val("0");
                           }

                           if (val < 0) {
                               Alertoast('Telepathy value can not be < 0');
                               val = "0";
                               $('#telepathy').val("0");
                           }



                           $.ajax({
                               type: "POST",
                               cache: false,
                                url: "@Url.Action("_updateTelepathy")",
                                dataType: "html",
                                contentType: "application/json; charset=utf-8",
                                data: JSON.stringify({ 'val': val, 'TempID': @Model.TempID }),
                                success: function (data)
                                {
                                    UpdateToast(data);
                                    reloadNpcView();
                                },
                                failure: function (errMsg) {
                                    console.log("error telepathy")
                                    alert(errMsg);
                                }
                            });
                       });
                   }
               );
</script>


<!--Challenge      -------------------------------------------------------------------------------------->

<!--updateChallenge-->
<script>
           $(document).ready(
               function updateChallenge() {
                   $("#chrating").change(function (event) {
                       var val = $('#chrating').val();
                       console.log(val);


                       $.ajax({
                           type: "POST",
                           cache: false,
                            url: "@Url.Action("_updateChallenge")",
                            dataType: "html",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({ 'val': val , 'TempID': @Model.TempID}),
                            success: function (data)
                            {
                                UpdateToast(data);
                                reloadNpcView();
                            },
                            failure: function (errMsg) {
                                console.log("error challenge")
                                alert(errMsg);
                            }
                        });
                   });
               }
           );
</script>



<!--Special traits      -------------------------------------------------------------------------------------->

<!--loadSpecialTraits on load-->
<script>
    $(document).ready(
        function loadSpecialTraits() {

            $.ajax({
                type: "POST",
                cache: false,
                url: "@Url.Action("_PartialSpecialTraits")",
                dataType: "html",
                data: JSON.stringify({'TempID': @Model.TempID}),
                contentType: "application/json; charset=utf-8",
                success: function (data)
                {
                    var _npcSenses = $("#_npcSpecialTraits");
                    _npcSenses.html(data);
                },
                failure: function (errMsg) {
                    console.log("error ?")
                    alert(errMsg);
                }
            });
        }
    );
</script>


<!--SpecialTraits-->
<script>
        function SpecialTraits() {

            $.ajax({
                type: "POST",
                cache: false,
                url: "@Url.Action("_PartialSpecialTraits")",
                dataType: "html",
                data: JSON.stringify({'TempID': @Model.TempID}),
                contentType: "application/json; charset=utf-8",
                success: function (data)
                {
                    var _npcSenses = $("#_npcSpecialTraits");
                    _npcSenses.html(data);
                },
                failure: function (errMsg) {
                    console.log("error ?")
                    alert(errMsg);
                }
            });
        }
</script>

<!--addSpecialTraits-->
<script>

        function addSpecialTraits() {

            $.ajax({
                type: "POST",
                cache: false,
                url: "@Url.Action("_addSpecialTrait")",
                        dataType: "html",
                        data: JSON.stringify({'TempID': @Model.TempID}),
                        contentType: "application/json; charset=utf-8",
                        success: function (data)
                        {
                            SpecialTraits();
                            reloadNpcView();
                        },
                        failure: function (errMsg) {
                            console.log("error ?")
                            alert(errMsg);
                        }
                    });
        }
</script>

<!--deleteSpecialTraits-->
<script>

            function deleteSpecialTraits(name) {


                       $.ajax({
                           type: "POST",
                           cache: false,
                            url: "@Url.Action("_deleteSpecialTraits")",
                            dataType: "html",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({'name': name, 'TempID': @Model.TempID}),
                            success: function (data)
                            {
                                SpecialTraits();
                                reloadNpcView();
                            },
                            failure: function (errMsg) {
                                console.log("error ?")
                                alert(errMsg);
                            }
                });

            }
</script>


<!--editTextSpecialTrait-->
<script>

            function editTextSpecialtrait(text, value) {
                           $.ajax({
                               type: "POST",
                               cache: false,
                                url: "@Url.Action("_editTextSpecialTraits")",
                                dataType: "html",
                                contentType: "application/json; charset=utf-8",
                                data: JSON.stringify({'name': value, 'text': text, 'TempID': @Model.TempID}),
                                success: function (data)
                                {
                                    UpdateToast(data);
                                    reloadNpcView();
                                },
                                failure: function (errMsg) {
                                    console.log("error ?")
                                    alert(errMsg);
                                }
                            });
                }
</script>

<!--editNameSpecialtrait-->
<script>

            function editNameSpecialtrait(preName, name) {
                               $.ajax({
                                   type: "POST",
                                   cache: false,
                                    url: "@Url.Action("_editNameSpecialTraits")",
                                    dataType: "html",
                                    contentType: "application/json; charset=utf-8",
                                    data: JSON.stringify({'preName': preName, 'name': name, 'TempID': @Model.TempID}),
                                    success: function (data)
                                    {
                                        UpdateToast(data);
                                        SpecialTraits();
                                        reloadNpcView();
                                    },
                                    failure: function (errMsg) {
                                        console.log("error ?")
                                        alert(errMsg);
                                    }
                                });
                    }
</script>









