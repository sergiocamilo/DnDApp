@model Dnd_App.Models.Combat.Combat

@{

    var CurrentAction = new Dnd_App.Models.Characters.Action();

    if (Model.Characters[Model.IndexCharacter].Type == Dnd_App.Models.Enum.TypeCharacter.NPC)
    {
        var npc = Model.NPCs[Model.Characters[Model.IndexCharacter].iList].NPC;
        CurrentAction = Model.NPCs[Model.Characters[Model.IndexCharacter].iList].NPC.Actions[ViewBag.iAction];
    }
    else
    {
        var pc = Model.PCs[Model.Characters[Model.IndexCharacter].iList];
        var Actions = new List<Dnd_App.Models.Characters.Action>();
        Actions = pc.PC.presetActions.Concat(pc.PC.actions).ToList();
        CurrentAction = Actions[ViewBag.iAction];
    }




}


<div class="card white z-depth-2 grey darken-4">
    <div class="row">
        <div class="col s12">
            <h4 class="white-text light">Select targets for @CurrentAction.Name</h4>
        </div>
        <div class="col s12">
            <div class="row white-text">
                <div class="col s6">
                    <p>
                        <input name="actionRadio" type="radio" id="harm" checked />
                        <label class="white-text" for="harm">Damage</label>
                    </p>
                    <p>
                        <input name="actionRadio" type="radio" id="heal" />
                        <label class="white-text" for="heal">Healing</label>
                    </p>
                    <p>
                        <input name="actionRadio" type="radio" id="effect" />
                        <label class="white-text" for="effect">Apply effect</label>
                    </p>
                    <p>
                        <input name="actionRadio" type="radio" id="temphp" />
                        <label class="white-text" for="temphp">Temporary HP</label>
                    </p>
                </div>
                <div class="row">
                    <div id="div-harm-input">
                        <div class="col s6">
                            <div class="input-field col s6">
                                <input value="0" id="harm-input" type="number">
                                <label class="active" for="harm-input">Damage</label>
                            </div>
                        </div>
                    </div>
                    <div id="div-heal-input" style="display: none;">
                        <div class="col s6">
                            <div class="input-field col s6">
                                <input value="0" id="heal-input" type="number">
                                <label class="active" for="heal-input">Heal</label>
                            </div>
                        </div>
                    </div>
                    <div id="div-effect-input" style="display: none;">
                        <div class="col s6">
                            <div class="input-field col s12">
                                <select id="select-effect">
                                    @foreach (Dnd_App.Models.Enum.TypeCondition imm in Enum.GetValues(typeof(Dnd_App.Models.Enum.TypeCondition)))
                                    {
                                        <option value="@((int)imm)">@imm.ToString()</option>
                                    }
                                </select>
                                <label>Select effect</label>
                            </div>
                            <div class="input-field col s6">
                                <input value="0" id="duration-input" type="number">
                                <label class="active" for="duration-input">Duration (Turns)</label>
                            </div>
                        </div>
                    </div>
                    <div id="div-temphp-input" style="display: none;">
                        <div class="col s6">
                            <div class="input-field col s6">
                                <input value="0" id="temphp-input" type="number">
                                <label class="active" for="temphp-input">Temporary HP</label>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="col s12">
            <div id="_characters"></div>
        </div>
    </div>

</div>

<script src="~/Scripts/materialize/loadform.js"></script>
<script src="~/Scripts/materialize/initform.js"></script>


<script>
        $(document).ready(
            function LoadCharacters() {
                ReloadCharacters();
            }
        );
</script>


<script>
        function ReloadCharacters() {

            $.ajax({
               type: "GET",
                cache: false,
                url: "@Url.Action("_Characters","Combat")",
                data: { 'TempID': @Model.TempID },
                contentType: "application/json; charset=utf-8",
                success: function (data)
                {
                    var _npcSpeeds = $("#_characters");
                    _npcSpeeds.html(data);
                },
                failure: function (errMsg) {
                    console.log("error size")
                    alert(errMsg);
                }
            });
        }
</script>







<script>
    $(document).ready(function () {
        $('#harm').click(function () {
            if ($(this).is(':checked')) {
                console.log('harm check');
                $('#div-harm-input').show();
                $('#div-heal-input').hide();
                $('#div-effect-input').hide();
                $('#div-temphp-input').hide();
            }
        });

        $('#heal').click(function () {
            if ($(this).is(':checked')) {
                console.log('heal check');
                $('#div-harm-input').hide();
                $('#div-heal-input').show();
                $('#div-effect-input').hide();
                $('#div-temphp-input').hide();
            }
        });

        $('#effect').click(function () {
            if ($(this).is(':checked')) {
                console.log('effect check');
                $('#div-harm-input').hide();
                $('#div-heal-input').hide();
                $('#div-effect-input').show();
                $('#div-temphp-input').hide();
            }
        });
        $('#temphp').click(function () {
            if ($(this).is(':checked')) {
                console.log('effect check');
                $('#div-harm-input').hide();
                $('#div-heal-input').hide();
                $('#div-effect-input').hide();
                $('#div-temphp-input').show();
            }
        });
    });
</script>


<script>
    function applyActionTo(iCharacter, type) {

        if ($('#harm').is(':checked')) {

            var val = $('#harm-input').val();
            console.log("Harm type " + type + " i " + iCharacter + "dmg -" + val);
            if ($.isNumeric(val) && val > 0) {
                harm(iCharacter, type, val);
            }
            else {
                Materialize.toast('<i class="fa fa-check-circle fa-fw"></i> Damage value is not valid', 3000);
            }
           

        }
        if ($('#heal').is(':checked')) {

            var val = $('#heal-input').val();
            console.log("Heal type " + type + " i " + iCharacter + "heal +" + val);
            if ($.isNumeric(val) && val > 0) {
                heal(iCharacter, type, val);
            }
            else {
                Materialize.toast('<i class="fa fa-check-circle fa-fw"></i> Healing value is not valid', 3000);
            }
            
        }
        if ($('#effect').is(':checked')) {
            console.log("effect");
            console.log($('#select-effect').val());
            console.log($('#duration-input').val());
            var val = $('#select-effect').val();
            var duration = $('#duration-input').val();
            
            if ($.isNumeric(duration) && duration > 0) {
                effect(iCharacter, type, val, duration);
            }
            else {
                Materialize.toast('<i class="fa fa-check-circle fa-fw"></i> Duration value is not valid', 3000);
            }

        }
        if ($('#temphp').is(':checked')) {

            var val = $('#temphp-input').val();
            console.log("Temporary hp type " + type + " i " + iCharacter + "dmg +" + val);
            if ($.isNumeric(val) && val > 0) {
                temphp(iCharacter, type, val);
            }
            else {
                Materialize.toast('<i class="fa fa-check-circle fa-fw"></i> Temporary HP value is not valid', 3000);
            }
            
        }
    } 
</script>

<script>
    function heal(iCharacter, type, val) {

         $.ajax({
            type: "POST",
            cache: false,
            url: "@Url.Action("Heal", "Combat")",
            dataType: "html",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ 'Val': val, 'Type': type, 'ICharacter': iCharacter, 'TempID': @Model.TempID }),
            success: function (data)
            {
                var json = JSON.parse(data);
                Materialize.toast('<i class="fa fa-check-circle fa-fw"></i> ' + json["msg"] , 3000);

                ReloadCharacters();
            },
            failure: function (errMsg) {
                console.log("error size")
                alert(errMsg);
            }
        });
    }
</script>

<script>
    function harm(iCharacter, type, val) {

         $.ajax({
            type: "POST",
            cache: false,
            url: "@Url.Action("Harm", "Combat")",
            dataType: "html",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ 'Val': val, 'Type': type, 'ICharacter': iCharacter, 'TempID': @Model.TempID }),
            success: function (data) {
                var json = JSON.parse(data);
                Materialize.toast('<i class="fa fa-check-circle fa-fw"></i> ' + json["msg"], 3000);

                ReloadCharacters();
            },
            failure: function (errMsg) {
                console.log("error size")
                alert(errMsg);
            }
        });
    }
</script>

<script>
    function effect(iCharacter, type, val, duration) {

         $.ajax({
            type: "POST",
            cache: false,
            url: "@Url.Action("AddEffect", "Combat")",
            dataType: "html",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ 'Val': val, 'Type': type, 'ICharacter': iCharacter, 'Duration': duration, 'TempID': @Model.TempID }),
            success: function (data) {
                ReloadCharacters();
                var json = JSON.parse(data);
                Materialize.toast('<i class="fa fa-check-circle fa-fw"></i> ' + json["msg"], 3000);
            },
            failure: function (errMsg) {
                console.log("error size");
                alert(errMsg);
            }
        });
    }
</script>


<script>
    function temphp(iCharacter, type, val) {

         $.ajax({
            type: "POST",
            cache: false,
            url: "@Url.Action("TemporaryHP", "Combat")",
            dataType: "html",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ 'Val': val, 'Type': type, 'ICharacter': iCharacter, 'TempID': @Model.TempID }),
            success: function (data)
            {
                var json = JSON.parse(data);
                Materialize.toast('<i class="fa fa-check-circle fa-fw"></i> ' + json["msg"] , 3000);

                ReloadCharacters();
            },
            failure: function (errMsg) {
                console.log("error size")
                alert(errMsg);
            }
        });
    }
</script>